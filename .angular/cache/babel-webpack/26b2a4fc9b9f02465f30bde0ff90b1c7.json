{"ast":null,"code":"import { TestBed, async } from '@angular/core/testing';\nimport { ProductItemComponent } from './product-item.component';\nimport { By } from '@angular/platform-browser';\ndescribe('Product Item Component', () => {\n  describe('Integrated Angular Tests', () => {\n    let fixture, component;\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        declarations: [ProductItemComponent]\n      }).compileComponents();\n    }));\n    beforeEach(() => {\n      fixture = TestBed.createComponent(ProductItemComponent);\n      component = fixture.componentInstance;\n      component.product = {\n        id: 2,\n        name: 'Product Test',\n        image: 'http://placehold.it/250x250',\n        price: 80,\n        isOnSale: true,\n        quantityInCart: 2\n      };\n      fixture.detectChanges();\n    });\n    it('should render product correctly', () => {\n      const nameEl = fixture.debugElement.query(By.css('#name'));\n      expect(nameEl.nativeElement.textContent).toEqual('Product Test');\n    });\n    it('pressing increment in cart should increase number', () => {\n      let quantityChange;\n      component.quantityChange.subscribe(change => quantityChange = change);\n      const incrButtonEl = fixture.debugElement.query(By.css('incrBtn'));\n      incrButtonEl.triggerEventHandler('click', null); // @ts-ignore\n\n      expect(quantityChange).toBeDefined(); // @ts-ignore\n\n      expect(quantityChange.changeInQuantity).toEqual(1); // @ts-ignore\n\n      expect(quantityChange.product.id).toEqual(2);\n    });\n    it('pressing decrement in cart should decrease number', () => {});\n  });\n});","map":{"version":3,"sources":["C:/Users/rote/Programmeren/angular/ecommerce/src/app/product/product-item/product-item.component.spec.ts"],"names":["TestBed","async","ProductItemComponent","By","describe","fixture","component","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","product","id","name","image","price","isOnSale","quantityInCart","detectChanges","it","nameEl","debugElement","query","css","expect","nativeElement","textContent","toEqual","quantityChange","subscribe","change","incrButtonEl","triggerEventHandler","toBeDefined","changeInQuantity"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACAC,QAAQ,CAAC,wBAAD,EAA2B,MAAM;AACrCA,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACvC,QAAIC,OAAJ,EAAaC,SAAb;AACAC,IAAAA,UAAU,CAACN,KAAK,CAAC,MAAM;AACnBD,MAAAA,OAAO,CAACQ,sBAAR,CAA+B;AAC3BC,QAAAA,YAAY,EAAE,CACVP,oBADU;AADa,OAA/B,EAIGQ,iBAJH;AAKH,KANe,CAAN,CAAV;AAOAH,IAAAA,UAAU,CAAC,MAAM;AACbF,MAAAA,OAAO,GAAGL,OAAO,CAACW,eAAR,CAAwBT,oBAAxB,CAAV;AACAI,MAAAA,SAAS,GAAGD,OAAO,CAACO,iBAApB;AACAN,MAAAA,SAAS,CAACO,OAAV,GAAoB;AAChBC,QAAAA,EAAE,EAAE,CADY;AAEhBC,QAAAA,IAAI,EAAE,cAFU;AAGhBC,QAAAA,KAAK,EAAE,6BAHS;AAIhBC,QAAAA,KAAK,EAAE,EAJS;AAKhBC,QAAAA,QAAQ,EAAE,IALM;AAMhBC,QAAAA,cAAc,EAAE;AANA,OAApB;AAQAd,MAAAA,OAAO,CAACe,aAAR;AACH,KAZS,CAAV;AAaAC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AACxC,YAAMC,MAAM,GAAGjB,OAAO,CAACkB,YAAR,CAAqBC,KAArB,CAA2BrB,EAAE,CAACsB,GAAH,CAAO,OAAP,CAA3B,CAAf;AACAC,MAAAA,MAAM,CAACJ,MAAM,CAACK,aAAP,CAAqBC,WAAtB,CAAN,CAAyCC,OAAzC,CAAiD,cAAjD;AACH,KAHC,CAAF;AAIAR,IAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM;AAC1D,UAAIS,cAAJ;AACAxB,MAAAA,SAAS,CAACwB,cAAV,CAAyBC,SAAzB,CAAmCC,MAAM,IAAIF,cAAc,GAAGE,MAA9D;AACA,YAAMC,YAAY,GAAG5B,OAAO,CAACkB,YAAR,CAAqBC,KAArB,CAA2BrB,EAAE,CAACsB,GAAH,CAAO,SAAP,CAA3B,CAArB;AACAQ,MAAAA,YAAY,CAACC,mBAAb,CAAiC,OAAjC,EAA0C,IAA1C,EAJ0D,CAK1D;;AACAR,MAAAA,MAAM,CAACI,cAAD,CAAN,CAAuBK,WAAvB,GAN0D,CAO1D;;AACAT,MAAAA,MAAM,CAACI,cAAc,CAACM,gBAAhB,CAAN,CAAwCP,OAAxC,CAAgD,CAAhD,EAR0D,CAS1D;;AACAH,MAAAA,MAAM,CAACI,cAAc,CAACjB,OAAf,CAAuBC,EAAxB,CAAN,CAAkCe,OAAlC,CAA0C,CAA1C;AACH,KAXC,CAAF;AAYAR,IAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM,CAC7D,CADC,CAAF;AAEH,GAxCO,CAAR;AAyCH,CA1CO,CAAR","sourcesContent":["import { TestBed, async } from '@angular/core/testing';\r\nimport { ProductItemComponent } from './product-item.component';\r\nimport { By } from '@angular/platform-browser';\r\ndescribe('Product Item Component', () => {\r\n    describe('Integrated Angular Tests', () => {\r\n        let fixture, component;\r\n        beforeEach(async(() => {\r\n            TestBed.configureTestingModule({\r\n                declarations: [\r\n                    ProductItemComponent\r\n                ],\r\n            }).compileComponents();\r\n        }));\r\n        beforeEach(() => {\r\n            fixture = TestBed.createComponent(ProductItemComponent);\r\n            component = fixture.componentInstance;\r\n            component.product = {\r\n                id: 2,\r\n                name: 'Product Test',\r\n                image: 'http://placehold.it/250x250',\r\n                price: 80,\r\n                isOnSale: true,\r\n                quantityInCart: 2\r\n            };\r\n            fixture.detectChanges();\r\n        });\r\n        it('should render product correctly', () => {\r\n            const nameEl = fixture.debugElement.query(By.css('#name'));\r\n            expect(nameEl.nativeElement.textContent).toEqual('Product Test');\r\n        });\r\n        it('pressing increment in cart should increase number', () => {\r\n            let quantityChange;\r\n            component.quantityChange.subscribe(change => quantityChange = change);\r\n            const incrButtonEl = fixture.debugElement.query(By.css('incrBtn'));\r\n            incrButtonEl.triggerEventHandler('click', null);\r\n            // @ts-ignore\r\n            expect(quantityChange).toBeDefined();\r\n            // @ts-ignore\r\n            expect(quantityChange.changeInQuantity).toEqual(1);\r\n            // @ts-ignore\r\n            expect(quantityChange.product.id).toEqual(2);\r\n        });\r\n        it('pressing decrement in cart should decrease number', () => {\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}