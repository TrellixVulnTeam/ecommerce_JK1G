{"ast":null,"code":"import { TestBed, async } from '@angular/core/testing';\nimport { ProductListComponent } from './product-list.component';\nimport { By } from '@angular/platform-browser';\nimport { ProductItemComponent } from \"../product-item/product-item.component\";\ndescribe('Product List Component', () => {\n  describe('Non-Angular Tests', () => {\n    it('quantity should change when + or - is pressed', () => {\n      const component = new ProductListComponent();\n      component.ngOnInit();\n      expect(component.products[1].quantityInCart).toEqual(0);\n      component.onQuantityChange({\n        changeInQuantity: 2,\n        product: component.products[1]\n      });\n      expect(component.products[1].quantityInCart).toEqual(2);\n      component.onQuantityChange({\n        changeInQuantity: -1,\n        product: component.products[1]\n      });\n      expect(component.products[1].quantityInCart).toEqual(1);\n    });\n  });\n  describe('Integrated Angular Test', () => {\n    let fixture, component;\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        declarations: [ProductListComponent, ProductItemComponent]\n      }).compileComponents();\n    }));\n    beforeEach(() => {\n      fixture = TestBed.createComponent(ProductListComponent);\n      component = fixture.componentInstance;\n      fixture.detectChanges();\n    });\n    it('should render three product list items', () => {\n      const productItems = fixture.debugElement.queryAll(By.css('app-product-item'));\n      expect(productItems.length).toEqual(3);\n      assertProduct(productItems[0], 'Test Product - 1', 50, 0);\n      assertProduct(productItems[1], 'Test Product - 2', 150, 0);\n      assertProduct(productItems[2], 'Test Product - 3', 250, 0);\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/rote/Programmeren/angular/ecommerce/src/app/product/product-list/product-list.component.spec.ts"],"names":["TestBed","async","ProductListComponent","By","ProductItemComponent","describe","it","component","ngOnInit","expect","products","quantityInCart","toEqual","onQuantityChange","changeInQuantity","product","fixture","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","detectChanges","productItems","debugElement","queryAll","css","length","assertProduct"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,uBAA/B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACA,SAASC,oBAAT,QAAqC,wCAArC;AACAC,QAAQ,CAAC,wBAAD,EAA2B,MAAM;AACrCA,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAChCC,IAAAA,EAAE,CAAC,+CAAD,EAAkD,MAAM;AACtD,YAAMC,SAAS,GAAG,IAAIL,oBAAJ,EAAlB;AACAK,MAAAA,SAAS,CAACC,QAAV;AACAC,MAAAA,MAAM,CAACF,SAAS,CAACG,QAAV,CAAmB,CAAnB,EAAsBC,cAAvB,CAAN,CAA6CC,OAA7C,CAAqD,CAArD;AACAL,MAAAA,SAAS,CAACM,gBAAV,CAA2B;AAAEC,QAAAA,gBAAgB,EAAE,CAApB;AAAuBC,QAAAA,OAAO,EAAER,SAAS,CAACG,QAAV,CAAmB,CAAnB;AAAhC,OAA3B;AACAD,MAAAA,MAAM,CAACF,SAAS,CAACG,QAAV,CAAmB,CAAnB,EAAsBC,cAAvB,CAAN,CAA6CC,OAA7C,CAAqD,CAArD;AACAL,MAAAA,SAAS,CAACM,gBAAV,CAA2B;AAAEC,QAAAA,gBAAgB,EAAE,CAAC,CAArB;AAAwBC,QAAAA,OAAO,EAAER,SAAS,CAACG,QAAV,CAAmB,CAAnB;AAAjC,OAA3B;AACAD,MAAAA,MAAM,CAACF,SAAS,CAACG,QAAV,CAAmB,CAAnB,EAAsBC,cAAvB,CAAN,CAA6CC,OAA7C,CAAqD,CAArD;AACH,KARC,CAAF;AASH,GAVO,CAAR;AAWAP,EAAAA,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACtC,QAAIW,OAAJ,EAAaT,SAAb;AACAU,IAAAA,UAAU,CAAChB,KAAK,CAAC,MAAM;AACnBD,MAAAA,OAAO,CAACkB,sBAAR,CAA+B;AAC3BC,QAAAA,YAAY,EAAE,CACVjB,oBADU,EAEVE,oBAFU;AADa,OAA/B,EAKGgB,iBALH;AAMH,KAPe,CAAN,CAAV;AAQAH,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,OAAO,GAAGhB,OAAO,CAACqB,eAAR,CAAwBnB,oBAAxB,CAAV;AACAK,MAAAA,SAAS,GAAGS,OAAO,CAACM,iBAApB;AACAN,MAAAA,OAAO,CAACO,aAAR;AACH,KAJS,CAAV;AAKAjB,IAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AAC/C,YAAMkB,YAAY,GAAGR,OAAO,CAACS,YAAR,CAAqBC,QAArB,CAA8BvB,EAAE,CAACwB,GAAH,CAAO,kBAAP,CAA9B,CAArB;AACAlB,MAAAA,MAAM,CAACe,YAAY,CAACI,MAAd,CAAN,CAA4BhB,OAA5B,CAAoC,CAApC;AACAiB,MAAAA,aAAa,CAACL,YAAY,CAAC,CAAD,CAAb,EAAkB,kBAAlB,EAAsC,EAAtC,EAA0C,CAA1C,CAAb;AACAK,MAAAA,aAAa,CAACL,YAAY,CAAC,CAAD,CAAb,EAAkB,kBAAlB,EAAsC,GAAtC,EAA2C,CAA3C,CAAb;AACAK,MAAAA,aAAa,CAACL,YAAY,CAAC,CAAD,CAAb,EAAkB,kBAAlB,EAAsC,GAAtC,EAA2C,CAA3C,CAAb;AACH,KANC,CAAF;AAOH,GAtBO,CAAR;AAuBH,CAnCO,CAAR","sourcesContent":["import { TestBed, async } from '@angular/core/testing';\r\nimport { ProductListComponent } from './product-list.component';\r\nimport { By } from '@angular/platform-browser';\r\nimport { ProductItemComponent } from \"../product-item/product-item.component\";\r\ndescribe('Product List Component', () => {\r\n    describe('Non-Angular Tests', () => {\r\n        it('quantity should change when + or - is pressed', () => {\r\n            const component = new ProductListComponent();\r\n            component.ngOnInit();\r\n            expect(component.products[1].quantityInCart).toEqual(0);\r\n            component.onQuantityChange({ changeInQuantity: 2, product: component.products[1] });\r\n            expect(component.products[1].quantityInCart).toEqual(2);\r\n            component.onQuantityChange({ changeInQuantity: -1, product: component.products[1] });\r\n            expect(component.products[1].quantityInCart).toEqual(1);\r\n        });\r\n    });\r\n    describe('Integrated Angular Test', () => {\r\n        let fixture, component;\r\n        beforeEach(async(() => {\r\n            TestBed.configureTestingModule({\r\n                declarations: [\r\n                    ProductListComponent,\r\n                    ProductItemComponent\r\n                ],\r\n            }).compileComponents();\r\n        }));\r\n        beforeEach(() => {\r\n            fixture = TestBed.createComponent(ProductListComponent);\r\n            component = fixture.componentInstance;\r\n            fixture.detectChanges();\r\n        });\r\n        it('should render three product list items', () => {\r\n            const productItems = fixture.debugElement.queryAll(By.css('app-product-item'));\r\n            expect(productItems.length).toEqual(3);\r\n            assertProduct(productItems[0], 'Test Product - 1', 50, 0);\r\n            assertProduct(productItems[1], 'Test Product - 2', 150, 0);\r\n            assertProduct(productItems[2], 'Test Product - 3', 250, 0);\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}